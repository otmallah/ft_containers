!<arch>
main.cpp        1671981010  4112  4219  100644  2022      `
/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   main.cpp                                           :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: otmallah <otmallah@student.42.fr>          +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2022/10/18 01:54:59 by otmallah          #+#    #+#             */
/*   Updated: 2022/12/25 16:10:10 by otmallah         ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#include "vector/vector.hpp"
#include <vector>
#include <stack>
#include "stack/stack.hpp"
#include <sys/time.h>
#include <vector>
#include <iostream>
#include <iterator>
#include <ctime>
#include <iomanip>
#include <unistd.h>
#include <signal.h>
#include <sys/time.h>

#define EQUAL(x) ((x) ? (std::cout << "\033[1;32mAC\033[0m\n") : (std::cout << "\033[1;31mWA\033[0m\n"))
#define TIME_FAC 3 // the ft::vector methods can be slower up to std::vector methods * TIME_FAC (MAX 20)

time_t get_time(void)
{
    struct timeval time_now;

    gettimeofday(&time_now, NULL);
    time_t msecs_time = (time_now.tv_sec * 1e3) + (time_now.tv_usec / 1e3);
    return (msecs_time);
}

int main()  
{
    {
    //ft::vector<int> vec;
//
    //for (size_t i = 0; i < 30; i++)
    //    vec.push_back(i);
//
    //for (size_t i = 0; i < vec.size(); i++)
    //    std::cout << vec[i] << std::endl;
    }

    ft::vector<int> a;

    std::cout << a.size() << std::endl;
    std::cout << a.capacity() << std::endl;
    a.resize(5);
    std::cout << a.size() << std::endl;
    std::cout << a.capacity() << std::endl;
    //system("leaks a.out");
}